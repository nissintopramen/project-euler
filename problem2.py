"""
EVEN FIBONACCI NUMBERS

Each new term in the Fibonacci sequence is generated by adding
the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values
do not exceed four million, find the sum of the even-valued terms.
"""

from functools import cache
from euler_library import fib

fib = cache(fib)
"""Manually add the cache decorator"""

def main():
    target_dict = whateva(4000000)
total = 0
    for val in target_dict.items():
        if val[1] % 2 == 0:
            total += val[1]

    print(target_dict)
    print(total)

if __name__ == '__main__':
    found_values = {}
    def whateva(target_value):
        i = 1
        value = 0
        while fib(i) <= target_value:
            value = fib(i)
            found_values[i] = value
            i += 1
        return found_values

    main()